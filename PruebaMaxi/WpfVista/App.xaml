<Application x:Class="WpfVista.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfVista"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        

        <Style TargetType="{x:Type Button}" x:Key="botonNegro">
            <Setter Property="Background" Value="#282828"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,30,0,0"/>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="backgroundTransferGray">
            <Setter Property="CornerRadius" Value="12,12,0,0"/>
            <Setter Property="Background" Value="#F5F5F5"/>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="backgroundTransferYellow">
            <Setter Property="CornerRadius" Value="0,0,0,0"/>
            <Setter Property="Background" Value="#FFF580"/>
            <Setter Property="Height" Value="154"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="borderSectionGray">
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="#F5F5F5"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="MinHeight" Value="204"/>
        </Style>

        <Style TargetType="{x:Type Label}" x:Key="titleInformationSection">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#808080"/>
            <Setter Property="Margin" Value="0,6,0,0"/>
        </Style>

        <Style x:Key="LabelTitle" TargetType="{x:Type Label}" >
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="Foreground" Value="#282828"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="contentInformationSectionBold">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#282828"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,6,10,0"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="contentInformationSection">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#4C4C4C"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="10,10,10,0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="buttonBlack">
            <Setter Property="Background" Value="#282828"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="10,0,10,0"/>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="BorderMainWindowModal">
            <Setter Property="Background" Value="#BF000000" />
            <Setter Property="Panel.ZIndex" Value="100" />
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="TextBoxLeft">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="CaretBrush" Value="#4C4C4C" />
            <Setter Property="Margin" Value="0,0,5,0" />
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="TextBoxRight">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="CaretBrush" Value="#4C4C4C" />
            <Setter Property="Margin" Value="5,0,0,0" />
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="BorderShellModal">
            <Setter Property="Background" Value="#BF000000" />
            <Setter Property="Panel.ZIndex" Value="53" />
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="buttonWhite">
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#00B0FF"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="10,0,10,0"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="buttonRed">
            <Setter Property="Background" Value="#fff"/>
            <Setter Property="Foreground" Value="#E03435"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="10,0,10,0"/>
        </Style>

        <Style x:Key="CT_ConfirmationTran" TargetType="{x:Type Label}" >
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#282828"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <!--<Grid>
                            <Polygon Points="0,0 10,0 0,10 0,0" HorizontalAlignment="Right" Fill="Blue" FlowDirection="RightToLeft"></Polygon>
                            <Border BorderBrush="Blue" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithError" />
                            </Border>
                        </Grid>-->
                        
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Bottom" Foreground="Red" FontSize="8pt" Text="{Binding ElementName=placeholder, Path= AdornedElement.(Validation.Errors)[0].ErrorContent}" Margin="0,-2,0,0"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder x:Name="placeholder" />
                            </Border>
                        </DockPanel>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Bottom" Foreground="Red" FontSize="8pt" Text="{Binding ElementName=placeholder, Path= AdornedElement.(Validation.Errors)[0].ErrorContent}" Margin="0,-2,0,0"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder x:Name="placeholder" />
                            </Border>
                        </DockPanel>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Bottom" Foreground="Red" FontSize="8pt" Text="{Binding ElementName=placeholder, Path= AdornedElement.(Validation.Errors)[0].ErrorContent}" Margin="0,-2,0,0"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder x:Name="placeholder" />
                            </Border>
                        </DockPanel>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


    </Application.Resources>
</Application>
